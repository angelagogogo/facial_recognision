package Controller;

import GUI.Window;
import org.opencv.core.Mat;

/**
 *
 * This class display the GUI for camera.
 *
 * @author Huan Gu
 * @version 1.0.0
 * @since 18/11/2014
 *
 */
public class CameraFrame extends javax.swing.JFrame {

    /**
     *
     * This variable holds an image reference.
     *
     */
    public Mat image;
    /**
     * This variable holds the file name that store the picture taken.
     * 
     */
    private String fileName;

    /**
     * Creates new form NewJFrame
     */
    public CameraFrame() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        photoTakingButton = new javax.swing.JButton();
        faceMatchingButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        photoTakingButton.setText("Take Photo");
        photoTakingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                photoTakingButtonActionPerformed(evt);
            }
        });

        faceMatchingButton.setText("Match Face");
        faceMatchingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                faceMatchingButtonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(photoTakingButton)
                .addGap(71, 71, 71)
                .addComponent(faceMatchingButton)
                .addGap(60, 60, 60)
                .addComponent(exitButton)
                .addContainerGap(162, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {exitButton, faceMatchingButton, photoTakingButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(494, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(photoTakingButton)
                    .addComponent(faceMatchingButton)
                    .addComponent(exitButton))
                .addGap(22, 22, 22))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {exitButton, faceMatchingButton, photoTakingButton});

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     *
     * This method listens to the button event
     *
     * @param evt the event from the button
     */
    private void photoTakingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_photoTakingButtonActionPerformed

        fileName = CameraDetector.savep(image);
        CameraDetector.flag = 1;
        CameraDetector.detectp(fileName);

        /*
         dispose();
         JavaCVFaceRecognizer rec = new JavaCVFaceRecognizer();
         rec.match();
         System.exit(0);
         */
    }//GEN-LAST:event_photoTakingButtonActionPerformed
    /**
     *
     * This method listens to the button event
     *
     * @param evt the event from the button
     */
    private void faceMatchingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_faceMatchingButtonActionPerformed
        int marker = 0;
        double confidence = 0;
        String photoAddr, trimPhotoAddr;

        JavaCVFaceRecognizer rec = new JavaCVFaceRecognizer();
        photoAddr = rec.match();
        confidence = rec.CmpPic(photoAddr, "photoes/face.jpg");
        System.out.println(confidence);
        //trim the address to fit in every platform
        trimPhotoAddr = photoAddr.substring(photoAddr.lastIndexOf("groupTest"));
        trimPhotoAddr = trimPhotoAddr.substring(12).split(".jpg")[0];
        System.out.println(trimPhotoAddr);

        if (confidence > 0.7) {
            switch (trimPhotoAddr) {
                case "Castiel":
                    marker = 43058;
                    break;
                case "Iris":
                    marker = 43077;
                    break;
                case "Angela":
                    marker = 43023;
                    break;
                case "Cassie":
                    marker = 43062;
                    break;
            }
        }

        if (marker != 0) {
            Window returnToDashboard = new Window();
            returnToDashboard.setVisible(true);
            returnToDashboard.getCLayout().show(returnToDashboard.getOperatePanel(), "dashboard");
            returnToDashboard.showDashBoard(marker);
            dispose();
        } else {
            Window returnToDashboard = new Window();
            returnToDashboard.setVisible(true);
            returnToDashboard.getCLayout().show(returnToDashboard.getOperatePanel(), "create profile");
            returnToDashboard.getPhotoURL = fileName;
            System.out.println(fileName);
            dispose();
        }

    }//GEN-LAST:event_faceMatchingButtonActionPerformed
    /**
     *
     * This method listens to the button event
     *
     * @param evt the event from the button
     */
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed
    /**
     *
     * This method holds a image from the camera.
     *
     * @param image the image produced by the camera
     */
    public void setP(Mat image) {
        this.image = image;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exitButton;
    private javax.swing.JButton faceMatchingButton;
    private javax.swing.JButton photoTakingButton;
    // End of variables declaration//GEN-END:variables
}
